{"version":3,"sources":["keys.js","components/WeatherInfo.js","components/WeatherForm.js","App.js","index.js"],"names":["module","exports","WEATHER_KEY","WeatherInfo","weather","error","className","temperature","city","country","description","humidity","wind_speed","WeatherForm","useState","tempType","setTempType","tempM","setWeather","onSubmit","e","preventDefault","target","elements","cityValue","value","countryValue","API_URL","fetch","then","resp","json","data","main","temp","wind","speed","name","sys","type","placeholder","autoComplete","autoFocus","onChange","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gHAAAA,EAAOC,QAAU,CACbC,YAAa,qC,2LCCJC,EAAc,SAAEC,GAGzB,OAEI,qCAEIA,EAAQC,OACR,qBAAKC,UAAU,0BAAf,SACA,4BAAIF,EAAQC,UAIZD,EAAQG,YACJ,sBAAKD,UAAU,iBAAf,UACI,2CACgBF,EAAQI,KADxB,IACgCJ,EAAQK,WAExC,8CACmBL,EAAQG,YAD3B,IAC2CH,EAAQM,eAEnD,2CACgBN,EAAQO,YAExB,6CACkBP,EAAQQ,iBAI9B,qBAAKN,UAAU,iBAAf,SACI,qDC3BPO,EAAc,WAEvB,MAAgCC,mBAAS,UAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACIC,EAAQ,QACZ,EAA8BH,mBAAS,IAAvC,mBAAOV,EAAP,KAAgBc,EAAhB,KAoDA,OACI,sBAAKZ,UAAU,iBAAf,UACI,uBAAMA,UAAU,OAAOa,SApDZ,SAACC,GAChBA,EAAEC,iBAEF,MAA0BD,EAAEE,OAAOC,SAA3Bf,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACRe,EAAYhB,EAAKiB,MACjBC,EAAejB,EAAQgB,MAEvBE,EAAQ,qDAAD,OAAsDH,EAAtD,YAAmEE,EAAnE,kBAAyFX,EAAzF,kBAA2Gb,eAExH,OAAOa,GACH,IAAI,SACAE,EAAM,QACN,MACJ,IAAI,WACAA,EAAM,QACN,MACJ,QACIA,EAAM,IAGVO,GAAaE,EACbE,MAAMD,GACDE,MAAM,SAAAC,GAAI,OAAIA,EAAKC,UACnBF,MAAM,SAAAG,GAEHd,EAAW,CAEPX,YAAayB,EAAKC,KAAKC,KAAO,IAAIjB,EAClCP,YAAasB,EAAK5B,QAAQ,GAAGM,YAC7BC,SAAUqB,EAAKC,KAAKtB,SACpBC,WAAYoB,EAAKG,KAAKC,MACtB5B,KAAMwB,EAAKK,KACX5B,QAASuB,EAAKM,IAAI7B,QAClBJ,MAAO,UAInBa,EAAW,CAACb,MAAO,uCAenB,UACI,qBAAKC,UAAU,aAAf,SACI,uBACIA,UAAU,eACViC,KAAK,OACLF,KAAK,OACLG,YAAY,iBACZC,aAAa,MACbC,WAAS,MAGjB,qBAAKpC,UAAU,aAAf,SACI,uBACIiC,KAAK,OACLF,KAAK,UACLG,YAAY,oBACZlC,UAAU,eACVmC,aAAa,UAGrB,yBACInC,UAAU,sCACVmB,MAAOV,EACP4B,SA/BK,SAACvB,GAClBJ,EAAYI,EAAEE,OAAOG,QA2Bb,UAKI,wBAAQA,MAAM,SAAd,qBACA,wBAAQA,MAAM,WAAd,wBACA,wBAAQA,MAAM,GAAd,uBAEJ,wBAAQnB,UAAU,4BAAlB,4BAIJ,cAAC,EAAD,eAAiBF,QC7EdwC,EAZH,WACV,OACE,qBAAKtC,UAAU,qBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,cAAC,EAAD,WCPVuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.86576681.chunk.js","sourcesContent":["module.exports = {\r\n    WEATHER_KEY: 'e923fde6709e67d57ccea781e9b060c8'\r\n}","import React from 'react'\r\n\r\nexport const WeatherInfo = ( weather ) => {\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n        {\r\n            weather.error &&\r\n            <div className=\"alert alert-danger mt-3\">\r\n            <p>{weather.error}</p>\r\n            </div>\r\n        }\r\n        {\r\n            weather.temperature ?\r\n                <div className=\"card card-body\">\r\n                    <p>\r\n                        Location: { weather.city} { weather.country }\r\n                    </p>\r\n                    <p>\r\n                        Temperature: { weather.temperature } { weather.description }\r\n                    </p>\r\n                    <p>\r\n                        Humidity: { weather.humidity }\r\n                    </p>\r\n                    <p>\r\n                        Wind Speed: { weather.wind_speed }\r\n                    </p>\r\n                </div>\r\n                :\r\n                <div className=\"card card-body\">\r\n                    <p>No request yet</p>\r\n                </div>\r\n        }        \r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { WEATHER_KEY } from '../keys';\r\nimport { WeatherInfo } from './WeatherInfo';\r\n\r\n\r\nexport const WeatherForm = () => {\r\n\r\n    const [tempType, setTempType] = useState('metric')\r\n    let tempM = '°C';\r\n    const [weather, setWeather] = useState({});\r\n    \r\n    const getWeather = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const { city, country } = e.target.elements;\r\n        const cityValue = city.value;\r\n        const countryValue = country.value;\r\n\r\n        const API_URL=`https://api.openweathermap.org/data/2.5/weather?q=${cityValue},${countryValue}&units=${tempType}&appid=${WEATHER_KEY}`;\r\n\r\n        switch(tempType) {\r\n            case'metric': \r\n                tempM='°C';\r\n                break;\r\n            case'imperial':\r\n                tempM='°F';\r\n                break;\r\n            default:\r\n                tempM='K';\r\n        }\r\n\r\n        if (cityValue && countryValue){\r\n            fetch(API_URL)\r\n                .then( resp => resp.json())\r\n                .then( data => {\r\n                    \r\n                    setWeather({\r\n                        \r\n                        temperature: data.main.temp + ' '+tempM,\r\n                        description: data.weather[0].description,\r\n                        humidity: data.main.humidity,\r\n                        wind_speed: data.wind.speed,\r\n                        city: data.name,\r\n                        country: data.sys.country,\r\n                        error: null\r\n                    })\r\n                })\r\n        } else {\r\n            setWeather({error: 'Please enter a city and a country'})\r\n        }\r\n\r\n            \r\n        \r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setTempType(e.target.value);\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"card card-body\">\r\n            <form className=\"form\" onSubmit={getWeather}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"form-control\" \r\n                        type=\"text\"\r\n                        name=\"city\"\r\n                        placeholder=\"Your city name\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"country\"\r\n                        placeholder=\"Your country name\"\r\n                        className=\"form-control\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <select \r\n                    className=\"custom-select custom-select-lg mb-3\"\r\n                    value={tempType}\r\n                    onChange={handleChange}\r\n                >\r\n                    <option value='metric'>Celsius</option>\r\n                    <option value='imperial'>Fahrenheit</option>\r\n                    <option value=''>Kelvin</option>\r\n                </select>\r\n                <button className=\"btn btn-success btn-block\">\r\n                    Get weather\r\n                </button>\r\n            </form>\r\n            <WeatherInfo {...weather}/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import './App.css';\nimport React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './bootstrap.min.css';\nimport { WeatherForm } from './components/WeatherForm';\n\n\nconst App = () => {\n  return (\n    <div className=\"container p-4 my-5\">\n      <div className=\"row\">\n        <div className=\"col-md-5 mx-auto\">\n          <WeatherForm />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}